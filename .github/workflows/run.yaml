name: "test github action"

on:
  workflow_dispatch:
  push:

jobs:
#  pre:
#    runs-on: ubuntu-latest
#    outputs:
#      output_id: ${{ steps.pre.outputs.ids }}
#      output_id1: ${{ steps.pre.outputs.test }}
#    steps:
#      - name: pre
#        id: pre
#        run: |
#          abcd=({1..256})
#          string=$(IFS=,; echo "${abcd[*]}")
#          #string=${string//,/ }
#          string="[$string]"
#          echo "ids=${string}" >>"$GITHUB_OUTPUT"
#          echo "test=world" >> "$GITHUB_OUTPUT"
##          echo ${{ toJSON( env.ids ) }}

  test:
#    needs:
#      - pre
#    strategy:
#      fail-fast: true
#      matrix:
#        no: ${{ fromJSON(needs.pre.outputs.output_id) }}
    runs-on: ubuntu-latest
#    env:
#      OUTPUT1: ${{needs.pre.outputs.output_id}}
#      OUTPUT2: ${{needs.pre.outputs.output_id1}}
    steps:
#    - name: abc
#      run: |
#        echo "${{ env.OUTPUT1 }}"
#        echo "${{ env.OUTPUT2 }}"
    - name: Checkout code
      uses: actions/checkout@v3
#    - name: Run script to make kind
#      run: bash -x scripts/run.sh
#    - name: Login to the dockerhub Registry
#      uses: docker/login-action@v2
#      with:
#        username: hyperledgerk8s
#        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Load the image of the previous test from cache
      id: restore-cache
      uses: actions/cache/restore@v3
      with:
        key: install-image-${{ github.sha }}
        restore-keys: install-image-
        path: |
          /tmp/images/
          /tmp/all.image.list
    - name: Run script to make kind
      run: bash -x scripts/kind.sh
    - name: Load cache images to kind cluster
      run: |
        source scripts/cache-image.sh
        load_all_images kind /tmp/images/
    - name: Run script to make kind
      run: bash -x scripts/run.sh
    - name: Cache images
      id: cache-image
      run: |
        source scripts/cache-image.sh
        save_all_images /tmp/images/ /tmp/all.image.list
        echo "upload_image=${UPLOAD_IMAGE}" >> $GITHUB_OUTPUT
    - name: Upload cache images
      if: steps.cache-image.outputs.upload_image == 'YES'
      uses: actions/cache/save@v3
      with:
        key: install-image-${{ github.sha }}
        path: |
          /tmp/images/
          /tmp/all.image.list
#  pull-in-win:
#    runs-on: windows-latest
#    steps:
#      - name: push
#        working-directory: .
#        run: |
#          docker login -u $env:USER -p $env:TOKEN
#          docker pull mcr.microsoft.com/powershell:nanoserver@sha256:b6d5ff841b78bdf2dfed7550000fd4f3437385b8fa686ec0f010be24777654d6
#          docker tag mcr.microsoft.com/powershell:nanoserver@sha256:b6d5ff841b78bdf2dfed7550000fd4f3437385b8fa686ec0f010be24777654d6 hyperledgerk8s/tekton-pipeline-args-powershell:nanoserver-b6d5ff
#          docker push hyperledgerk8s/tekton-pipeline-args-powershell:nanoserver-b6d5ff
#        env:
#          USER: hyperledgerk8s
#          TOKEN: ${{ secrets.DOCKER_TOKEN }}
